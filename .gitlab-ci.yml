# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:
  - build
  - test
  - deploy

variables:
  ROS_DISTRO: noetic
  CATKIN_WS: /catkin_ws

.ros_setup: &ros_setup
  before_script:
    - apt-get update && apt-get install -y lsb-release
    - sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
    - apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
    - apt-get update
    - apt-get install -y ros-${ROS_DISTRO}-desktop python3-catkin-tools python3-rosdep
    - rosdep init || true
    - rosdep update
    - mkdir -p ${CATKIN_WS}/src
    - cd ${CATKIN_WS}/src && ln -s /builds/${CI_PROJECT_PATH} .
    - cd ${CATKIN_WS}
    - rosdep install --from-paths src --ignore-src -y

build-job:
  stage: build
  image: ubuntu:20.04
  <<: *ros_setup
  script:
    - cd ${CATKIN_WS}
    - source /opt/ros/${ROS_DISTRO}/setup.bash
    - catkin init
    - catkin build -DCMAKE_BUILD_TYPE=Release
    - echo "Build complete."
  artifacts:
    paths:
      - ${CATKIN_WS}/build/
      - ${CATKIN_WS}/devel/
    expire_in: 1 hour

unit-test-job:
  stage: test
  image: ubuntu:20.04
  <<: *ros_setup
  dependencies:
    - build-job
  script:
    - cd ${CATKIN_WS}
    - source /opt/ros/${ROS_DISTRO}/setup.bash
    - source devel/setup.bash
    - catkin run_tests
    - catkin_test_results
    - echo "Unit tests complete."

lint-test-job:
  stage: test
  image: ubuntu:20.04
  <<: *ros_setup
  script:
    - cd ${CATKIN_WS}/src
    - apt-get install -y python3-pip
    - pip3 install roslint
    - find . -name "*.cpp" -o -name "*.h" | xargs cpplint --filter=-legal/copyright,-build/include_subdir
    - find . -name "*.py" | xargs pylint --errors-only
    - echo "Linting complete."

deploy-job:
  stage: deploy
  image: ubuntu:20.04
  environment: production
  only:
    - master
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."

